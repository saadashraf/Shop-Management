CREATE TABLE STOCK(
    PID VARCHAR2(10),
    MIN_MARGIN NUMBER DEFAULT 0,
    CURRENT_STOCK NUMBER DEFAULT 0,
    CONSTRAINT PK_STOCK PRIMARY KEY(PID),
    CONSTRAINT FK_STOCK_PRODUCT_INFO FOREIGN KEY (PID) REFERENCES PRODUCT_INFO(ID)
);


CREATE OR REPLACE PROCEDURE RESTOCK(PID_V IN VARCHAR2 , AMOUNT IN NUMBER)
AS
    CURRENT NUMBER;
BEGIN
        SELECT CURRENT_STOCK INTO CURRENT FROM STOCK WHERE PID = PID_V;
        UPDATE STOCK SET
        CURRENT_STOCK = CURRENT + AMOUNT 
        WHERE PID = PID_V;
        IF SQL%NOTFOUND THEN
            DBMS_OUTPUT.PUT_LINE ('PRODUCT DOES NO EXIST');
        END IF;
END;
/

CREATE OR REPLACE PROCEDURE DECREMENT_STOCK(PID_V IN VARCHAR2 , AMOUNT IN NUMBER, SUCCESS OUT BOOLEAN)
AS
    CURRENT NUMBER;
    UPDATED NUMBER;
    ROW_EXISTS NUMBER;
BEGIN
    SELECT COUNT(*) INTO ROW_EXISTS FROM STOCK WHERE PID = PID_V;
    
    IF ROW_EXISTS = 0 THEN
        DBMS_OUTPUT.PUT_LINE('PRODUCT DOES NOT EXIST');
        SUCCESS := FALSE;
    ELSE
        SELECT CURRENT_STOCK INTO CURRENT FROM STOCK WHERE PID = PID_V;
        UPDATED := CURRENT - AMOUNT ;
        IF UPDATED < 0 THEN
            DBMS_OUTPUT.PUT_LINE('CANNOT MEET REQUIREMENT');
            SUCCESS := FALSE;
        ELSE
            UPDATE STOCK SET
            CURRENT_STOCK = UPDATED 
            WHERE PID = PID_V;
            SUCCESS := TRUE;
        END IF;
    END IF;
END;
/





CREATE OR REPLACE TRIGGER STOCK_STATUS
BEFORE UPDATE ON STOCK 
FOR EACH ROW
ENABLE
DECLARE
    NEW_VALUE NUMBER;
    OLD_MARGIN NUMBER;
BEGIN
    NEW_VALUE := :NEW.CURRENT_STOCK;
    OLD_MARGIN := :OLD.MIN_MARGIN; 
    IF NEW_VALUE < OLD_MARGIN THEN
        DBMS_OUTPUT.PUT_LINE ('PRODUCT ' || TO_CHAR(:OLD.PID) || 
                            ' CURRENT STOCK IS BELOW MINIMUM MARGIN
                            AND COUNTING AT ' ||  TO_CHAR(NEW_VALUE));
    END IF;

END;
/

CREATE OR REPLACE PROCEDURE SET_MIN_MARGIN(PID_V IN VARCHAR2 ,
NEW_VALUE IN NUMBER )
AS
BEGIN
    UPDATE  STOCK SET
    MIN_MARGIN = NEW_VALUE
    WHERE PID = PID_V;
END;
/
